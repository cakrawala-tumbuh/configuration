name: Generate SQL from struktur_data

on:
  workflow_dispatch:
    inputs:
      db_schema:
        description: "Nama schema target (jika tidak ditentukan di YAML)"
        required: false
        default: "public"
      db_owner:
        description: "Owner default untuk objek (opsional)"
        required: false
        default: ""
      with_drop_statements:
        description: "Sertakan DROP TABLE/TYPE/VIEW IF EXISTS sebelum CREATE"
        required: false
        default: "true"
      default_varchar_length:
        description: "Panjang default untuk kolom tipe varchar jika tidak ditentukan"
        required: false
        default: "255"
      tablespace:
        description: "Tablespace default (kosongkan jika tidak dipakai)"
        required: false
        default: ""
      create_extensions:
        description: "Comma-separated list ekstensi yang perlu dibuat (mis. 'uuid-ossp,pg_trgm')"
        required: false
        default: ""
      strict_mode:
        description: "Gagal (exit 1) jika ada file YAML tidak valid"
        required: false
        default: "false"

jobs:
  build-sql:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Generate build.sql
        env:
          INPUT_DB_SCHEMA: ${{ github.event.inputs.db_schema }}
          INPUT_DB_OWNER: ${{ github.event.inputs.db_owner }}
          INPUT_WITH_DROP: ${{ github.event.inputs.with_drop_statements }}
          INPUT_DEFAULT_VARCHAR_LENGTH: ${{ github.event.inputs.default_varchar_length }}
          INPUT_TABLESPACE: ${{ github.event.inputs.tablespace }}
          INPUT_CREATE_EXTENSIONS: ${{ github.event.inputs.create_extensions }}
          INPUT_STRICT_MODE: ${{ github.event.inputs.strict_mode }}
        run: |
          python scripts/generate_sql_from_yaml.py \
            --struktur-dir "struktur_data" \
            --out "build.sql" \
            --schema "${INPUT_DB_SCHEMA}" \
            --owner "${INPUT_DB_OWNER}" \
            --with-drop "${INPUT_WITH_DROP}" \
            --default-varchar-length "${INPUT_DEFAULT_VARCHAR_LENGTH}" \
            --tablespace "${INPUT_TABLESPACE}" \
            --create-extensions "${INPUT_CREATE_EXTENSIONS}" \
            --strict "${INPUT_STRICT_MODE}"

      - name: Upload build.sql artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-sql
          path: build.sql

      - name: Job summary
        if: always()
        run: |
          echo "### Generate SQL Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Schema: \`${{ github.event.inputs.db_schema }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Owner: \`${{ github.event.inputs.db_owner || 'N/A' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- With DROP: \`${{ github.event.inputs.with_drop_statements }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Default varchar length: \`${{ github.event.inputs.default_varchar_length }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Tablespace: \`${{ github.event.inputs.tablespace || 'N/A' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Create extensions: \`${{ github.event.inputs.create_extensions || 'N/A' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Artifact **build-sql** berisi file \`build.sql\`." >> $GITHUB_STEP_SUMMARY
