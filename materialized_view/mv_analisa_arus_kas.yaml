name: mv_analisis_arus_kas
domain: keuangan
description: >
  Ringkasan arus kas bulanan per akun, mencakup arus_masuk, arus_keluar, dan saldo_bersih,
  dihitung dari transaksi kas dan jurnal terkait.

purpose:
  - Monitoring arus kas per akun
  - Sumber data kartu KPI dan tren di dashboard Superset
  - Menyederhanakan agregasi periodik dari transaksi kas

# Sumber Master (master-only) yang tersedia di struktur_data.zip
sources:
  account:
    url: struktur_data/account.yaml
  cashflow:
    url: struktur_data/cashflow.yaml
  journal_entry:
    url: struktur_data/journal_entry.yaml

primary_key:
  - account_id
  - periode

columns:
  - name: account_id
    type: uuid
    nullable: false
    description: "Identifier unik akun keuangan."
    source:
      ref: account
      column: id
    transform: "passthrough"
    example: "00000000-0000-0000-0000-000000000000"

  - name: account_code
    type: text
    nullable: true
    description: "Kode akun (bila tersedia)."
    source:
      ref: account
      column: code
    transform: "max(account.code)"
    example: "1101"

  - name: account_name
    type: text
    nullable: true
    description: "Nama akun."
    source:
      ref: account
      column: name
    transform: "max(account.name)"
    example: "Kas Besar"

  - name: periode
    type: date
    nullable: false
    description: "Periode agregasi (awal bulan) diturunkan dari tanggal transaksi jurnal/kas."
    source:
      ref: journal_entry
      column: tanggal
    transform: "date_trunc('month', journal_entry.tanggal)::date"
    example: "2025-07-01"

  - name: arus_masuk
    type: numeric(18,2)
    nullable: true
    description: "Total kas masuk pada periode untuk akun terkait."
    source:
      ref: cashflow
      column: amount_in
    transform: "sum(cashflow.amount_in)"
    example: 15000000.00

  - name: arus_keluar
    type: numeric(18,2)
    nullable: true
    description: "Total kas keluar pada periode untuk akun terkait."
    source:
      ref: cashflow
      column: amount_out
    transform: "sum(cashflow.amount_out)"
    example: 12000000.00

  - name: saldo_bersih
    type: numeric(18,2)
    nullable: true
    description: "Selisih arus_masuk dan arus_keluar pada periode (arus_masuk - arus_keluar)."
    source:
      ref: null
      column: null
    transform: "coalesce(sum(cashflow.amount_in),0) - coalesce(sum(cashflow.amount_out),0)"
    example: 3000000.00

  - name: transaksi_count
    type: integer
    nullable: true
    description: "Jumlah transaksi cashflow pada periode untuk akun terkait."
    source:
      ref: cashflow
      column: id
    transform: "count(cashflow.id)"
    example: 42

dependencies:
  base_entities:
    - account
    - cashflow
    - journal_entry
  views: []
  materialized_views: []

refresh_policy:
  strategy: scheduled
  schedule_cron: "0 2 * * *"
  with_data_on_create: true
  concurrently_on_refresh: true
  invalidate:
    - "Perubahan bulk pada transaksi jurnal/kas"

indexes:
  - name: mv_analisis_arus_kas_pk
    type: unique
    columns: [account_id, periode]
  - name: mv_analisis_arus_kas_idx_periode
    type: btree
    columns: [periode]
  - name: mv_analisis_arus_kas_idx_account
    type: btree
    columns: [account_id]

retention:
  keep_history_months: 36
  prune_policy: "hapus data > keep_history_months"

security:
  grant_read_to_roles:
    - bi_analyst
    - data_reader
  pii:
    contains_pii: false
    masking_policy: null

notes:
  - "Jika tersedia entitas `budget`, bisa ditambahkan kolom `anggaran_bulan_ini` dan `deviasi_anggaran`."
  - "Mapping tanggal mengambil dari `journal_entry.tanggal`. Jika di `cashflow` juga ada tanggal, bisa diseragamkan."
